name: Auto Deploy to EC2

on:
  push:
    branches: [ "release" ]

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: algo-mixing-and-solving-s3
  CODE_DEPLOY_APPLICATION_NAME: algo-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: algo-codedeploy-deployment-group
  working-directory: .

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    services:
      mysql:
        image: mysql:8.0.35
        env:
          MYSQL_DATABASE: test_database
          MYSQL_USER: test
          MYSQL_PASSWORD: 1234
          MYSQL_ROOT_PASSWORD: 1234
        ports:
          - 3306:3306

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Copy application.yml
        run: |
          mkdir ./src/main/resources
          touch ./src/main/resources/application.yml
          echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml
          touch ./src/main/resources/application-release.yml
          echo "${{ secrets.APPLICATION_RELEASE }}" > ./src/main/resources/application-release.yml

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{ env.working-directory }}

      - name: Build with Gradle
        run: ./gradlew clean build
        working-directory: ${{ env.working-directory }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
            --source .

      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
